a:20:{i:0;a:6:{s:4:"type";i:8192;s:7:"message";s:229:"Return type of Symfony\Component\Form\Form::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:1009;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:69;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:8192;s:7:"message";s:236:"Return type of Symfony\Component\Form\Form::offsetExists($name) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:957;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:69;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:8192;s:7:"message";s:231:"Return type of Symfony\Component\Form\Form::offsetGet($name) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:971;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:69;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:8192;s:7:"message";s:252:"Return type of Symfony\Component\Form\Form::offsetSet($name, $child) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:987;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:69;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:8192;s:7:"message";s:234:"Return type of Symfony\Component\Form\Form::offsetUnset($name) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:999;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:69;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:8192;s:7:"message";s:201:"Return type of Symfony\Component\Form\Form::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:1019;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:47:"/var/www/html/vue2/vendor/symfony/form/Form.php";s:4:"line";i:69;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:8192;s:7:"message";s:79:"strpos(): Passing null to parameter #1 ($haystack) of type string is deprecated";s:4:"file";s:93:"/var/www/html/vue2/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:1064;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:93:"/var/www/html/vue2/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:998;s:8:"function";s:13:"createVersion";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:8192;s:7:"message";s:191:"Ramsey\Uuid\Uuid implements the Serializable interface, which is deprecated. Implement __serialize() and __unserialize() instead (or in addition, if support for old PHP versions is necessary)";s:4:"file";s:50:"/var/www/html/vue2/vendor/ramsey/uuid/src/Uuid.php";s:4:"line";i:40;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:50:"/var/www/html/vue2/vendor/composer/ClassLoader.php";s:4:"line";i:571;s:4:"args";a:1:{i:0;s:50:"/var/www/html/vue2/vendor/ramsey/uuid/src/Uuid.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:8192;s:7:"message";s:233:"Return type of Symfony\Component\Finder\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:51:"/var/www/html/vue2/vendor/symfony/finder/Finder.php";s:4:"line";i:607;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:51:"/var/www/html/vue2/vendor/symfony/finder/Finder.php";s:4:"line";i:39;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:8192;s:7:"message";s:205:"Return type of Symfony\Component\Finder\Finder::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:51:"/var/www/html/vue2/vendor/symfony/finder/Finder.php";s:4:"line";i:676;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:51:"/var/www/html/vue2/vendor/symfony/finder/Finder.php";s:4:"line";i:39;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:8192;s:7:"message";s:238:"Return type of Symfony\Component\Finder\Iterator\FileTypeFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:76:"/var/www/html/vue2/vendor/symfony/finder/Iterator/FileTypeFilterIterator.php";s:4:"line";i:42;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:50:"/var/www/html/vue2/vendor/composer/ClassLoader.php";s:4:"line";i:571;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:8192;s:7:"message";s:286:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::getChildren() should either be compatible with RecursiveDirectoryIterator::getChildren(): RecursiveDirectoryIterator, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:80:"/var/www/html/vue2/vendor/symfony/finder/Iterator/RecursiveDirectoryIterator.php";s:4:"line";i:85;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:50:"/var/www/html/vue2/vendor/composer/ClassLoader.php";s:4:"line";i:571;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::rewind() should either be compatible with FilesystemIterator::rewind(): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:80:"/var/www/html/vue2/vendor/symfony/finder/Iterator/RecursiveDirectoryIterator.php";s:4:"line";i:113;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:50:"/var/www/html/vue2/vendor/composer/ClassLoader.php";s:4:"line";i:571;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:8192;s:7:"message";s:281:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::current() should either be compatible with FilesystemIterator::current(): SplFileInfo|FilesystemIterator|string, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:80:"/var/www/html/vue2/vendor/symfony/finder/Iterator/RecursiveDirectoryIterator.php";s:4:"line";i:61;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:50:"/var/www/html/vue2/vendor/composer/ClassLoader.php";s:4:"line";i:571;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:84:"/var/www/html/vue2/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:55;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:84:"/var/www/html/vue2/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:19;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:8192;s:7:"message";s:259:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::hasChildren() should either be compatible with RecursiveIterator::hasChildren(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:84:"/var/www/html/vue2/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:74;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:84:"/var/www/html/vue2/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:19;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:16;a:6:{s:4:"type";i:8192;s:7:"message";s:273:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::getChildren() should either be compatible with RecursiveIterator::getChildren(): ?RecursiveIterator, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:84:"/var/www/html/vue2/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:79;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:84:"/var/www/html/vue2/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:19;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:8192;s:7:"message";s:238:"Return type of Symfony\Component\Finder\Iterator\FilenameFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:76:"/var/www/html/vue2/vendor/symfony/finder/Iterator/FilenameFilterIterator.php";s:4:"line";i:28;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:76:"/var/www/html/vue2/vendor/symfony/finder/Iterator/FilenameFilterIterator.php";s:4:"line";i:21;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:18;a:6:{s:4:"type";i:8192;s:7:"message";s:234:"Return type of Symfony\Component\Finder\Iterator\PathFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:72:"/var/www/html/vue2/vendor/symfony/finder/Iterator/PathFilterIterator.php";s:4:"line";i:27;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:50:"/var/www/html/vue2/vendor/composer/ClassLoader.php";s:4:"line";i:571;s:8:"function";s:38:"Symfony\Component\HttpKernel\{closure}";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:19;a:6:{s:4:"type";i:16384;s:7:"message";s:159:"The "Doctrine\Common\Inflector\Inflector::tableize" method is deprecated and will be dropped in doctrine/inflector 2.0. Please update to the new Inflector API.";s:4:"file";s:88:"/var/www/html/vue2/vendor/doctrine/inflector/lib/Doctrine/Common/Inflector/Inflector.php";s:4:"line";i:80;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:66:"/var/www/html/vue2/vendor/api-platform/core/src/Util/Inflector.php";s:4:"line";i:45;s:8:"function";s:8:"tableize";s:5:"class";s:35:"Doctrine\Common\Inflector\Inflector";s:4:"type";s:2:"::";}}s:5:"count";i:12;}}